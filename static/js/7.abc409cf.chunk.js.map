{"version":3,"sources":["components/List.js","pages/History.js"],"names":["Wrapper","styled","div","HeaderWrapper","ListWrapper","StyledButton","Button","Component","observer","HistoryStore","useStores","t","useTranslation","useEffect","find","reset","IconText","icon","text","React","createElement","Header","itemLayout","pagination","onChange","page","console","log","pageSize","dataSource","list","footer","className","renderItem","item","Item","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","attributes","url","aria-hidden","xlinkHref","Meta","title","filename","type","onClick","img","window","confirm","delete","id","target","href","rel","History"],"mappings":"sTAYMA,EAAUC,IAAOC,IAAV,gKASPC,EAAgBF,IAAOC,IAAV,gJAQbE,EAAcH,IAAOC,IAAV,8BAIXG,EAAeJ,YAAOK,IAAPL,CAAH,iEAoGHM,EA/FGC,aAAS,WAAO,IACtBC,EAAiBC,cAAjBD,aACDE,EAAKC,cAALD,EAMPE,qBAAU,WAEN,OADAJ,EAAaK,OACN,WACHL,EAAaM,WAEnB,IAEF,IAMMC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACb,eAAC,IAAD,WACKC,IAAMC,cAAcH,GACpBC,MAGT,OACI,eAAClB,EAAD,WACK,cAACG,EAAD,UACG,cAACkB,EAAA,EAAD,MAEJ,cAAC,IAAD,CACIC,WAAW,WACXC,WAAY,CACZC,SAAU,SAAAC,GACNC,QAAQC,IAAIF,IAEhBG,SAAU,GAEVC,WAAYpB,EAAaqB,KACzBC,OACA,sBAAKC,UAAU,SAAf,UACI,6CADJ,kBAIAC,WAAY,SAAAC,GAAI,OAChB,cAAC,IAAKC,KAAN,CAEIC,QAAS,CACL,cAACpB,EAAD,CAAUC,KAAMoB,IAAcnB,KAAK,OAAU,wBAC7C,cAACF,EAAD,CAAUC,KAAMqB,IAAcpB,KAAK,OAAU,wBAC7C,cAACF,EAAD,CAAUC,KAAMsB,IAAiBrB,KAAK,KAAQ,0BAElDsB,MACI,qBACIC,MAAO,IACPC,IAAI,OACJC,IAAKT,EAAKU,WAAWC,IAAID,WAAWC,MAXhD,SAgBQ,eAAC,IAAD,WACI,sBAAKb,UAAU,QAAf,UACoB,qBAAKA,UAAU,OAAOc,cAAY,OAAlC,SAC5B,qBAAKC,UAAU,sBAEH,cAAC,IAAKZ,KAAKa,KAAX,CAEAC,MAAQtC,EAAE,kCAAWuB,EAAKU,WAAWM,WAGrC,cAAC9C,EAAD,UACI,cAACC,EAAD,CACA8C,KAAK,UAAUC,QAAS,WA5DlC,IAACC,IA4DuDnB,EA3D1DoB,OAAOC,QAAQ,kGACjB9C,EAAa+C,OAAOH,EAAII,KAyDV,SACwD9C,EAAE,uBAMlE,qCAAQA,EAAE,yBAAW,mBAAG+C,OAAO,SAASC,KAAMzB,EAAKU,WAAWC,IAAID,WAAWC,IAAKe,IAAI,sBAAjE,SAAwF1B,EAAKU,WAAWC,IAAID,WAAWC,aAjC/IX,EAAKe,gBC1EfY,UATf,WACI,OACI,mCAEI,cAAC,EAAD","file":"static/js/7.abc409cf.chunk.js","sourcesContent":["import React, { useEffect, useState }from 'react';\r\nimport { useStores } from './../stores/index';\r\nimport { observer} from 'mobx-react'\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { List, Spin, Button, Popconfirm, message  } from 'antd';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport {  Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport \"../assets/List.css\"\r\nimport {useTranslation} from 'react-i18next'\r\n//总容器\r\nconst Wrapper = styled.div`\r\n    // border:1px solid red;\r\n    background: #fff;\r\n    margin:55px;\r\n    border-radius:5px;\r\n    padding:20px;\r\n    width:800px;\r\n`\r\n//头部\r\nconst HeaderWrapper = styled.div`\r\n        // border: 1px solid red;\r\n        position: fixed;\r\n        top:0;\r\n        left:0;\r\n        width:100vw;\r\n`\r\n//列表\r\nconst ListWrapper = styled.div`\r\n\r\n`\r\n//按钮\r\nconst StyledButton = styled(Button)`\r\n    widht:200px;\r\n    height:200px;\r\n`\r\n\r\nconst Component = observer(() => {\r\n    const { HistoryStore } = useStores()\r\n    const {t} = useTranslation()\r\n    const loadMore = () => {\r\n        HistoryStore.find()\r\n        console.log(HistoryStore.list);\r\n    }\r\n\r\n    useEffect(() => {\r\n        HistoryStore.find()\r\n        return () => {\r\n            HistoryStore.reset()\r\n        }\r\n    },[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const deleteHistory = (img) => {\r\n        const confirm = window.confirm('此操作将永久删除该历史, 是否继续?')\r\n        if (confirm) {HistoryStore.delete(img.id)}\r\n    }\r\n\r\n\r\n    const IconText = ({ icon, text }) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n    return (\r\n        <Wrapper>\r\n             <HeaderWrapper>\r\n                <Header/>\r\n            </HeaderWrapper>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                pagination={{\r\n                onChange: page => {\r\n                    console.log(page);\r\n                },\r\n                pageSize: 3,\r\n                }}\r\n                dataSource={HistoryStore.list}\r\n                footer={\r\n                <div className=\"footer\">\r\n                    <b>impup design</b> footer part\r\n                </div>\r\n                }\r\n                renderItem={item => (\r\n                <List.Item\r\n                    key={item.title}\r\n                    actions={[\r\n                        <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n                        <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n                        <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                    ]}\r\n                    extra={\r\n                        <img\r\n                            width={200}\r\n                            alt=\"logo\"\r\n                            src={item.attributes.url.attributes.url}\r\n                        />\r\n                    }>\r\n                        \r\n                            \r\n                        <List>\r\n                            <div className=\"title\">\r\n                                                <svg className=\"icon\" aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-touxiang4\"></use>\r\n                </svg>\r\n                                <List.Item.Meta\r\n                                // avatar={<Avatar src={item.avatar} />}\r\n                                title={ t('图片名称：') + item.attributes.filename}\r\n                                // description={item.description}   \r\n                                />\r\n                                <ListWrapper>\r\n                                    <StyledButton \r\n                                    type=\"primary\" onClick={() => { deleteHistory(item) }}>{t('删除')}\r\n                                    </StyledButton>\r\n                                </ListWrapper>\r\n                            </div>\r\n                               \r\n\r\n                            <span> {t('URL地址：')}{<a target=\"_blank\" href={item.attributes.url.attributes.url} rel=\"noopener noreferrer\">{item.attributes.url.attributes.url}</a>}</span>\r\n      \r\n                                \r\n                        </List>\r\n                       \r\n                </List.Item>\r\n                )}\r\n            />\r\n            \r\n           \r\n        </Wrapper>\r\n    )\r\n})\r\n\r\nexport default Component","import React from 'react'\r\nimport List from '../components/List'\r\n\r\nfunction History() {\r\n    return (\r\n        <>\r\n            {/* <h1>History</h1> */}\r\n            <List/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default History"],"sourceRoot":""}