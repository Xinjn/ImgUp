{"version":3,"sources":["pages/Login.js"],"names":["Wraper","styled","div","Side","Sidebar","StyledLink","NavLink","Title","h1","NowRegister","layout","labelCol","span","wrapperCol","tailLayout","offset","validateUsername","rule","value","test","Promise","reject","length","resolve","Compenent","AuthStore","useStores","history","useHistory","useState","showSide","setShowSide","t","useTranslation","onClick","console","log","className","aria-hidden","xlinkHref","to","name","onFinish","values","setUsername","username","setPassword","password","login","then","push","catch","e","Item","label","rules","required","message","validator","min","max","Password","type","htmlType"],"mappings":"8RASMA,EAASC,IAAOC,IAAV,+OAYNC,EAAOF,IAAOC,IAAV,uJAUJE,EAAUH,IAAOC,IAAV,sRAkBPG,EAAaJ,YAAOK,IAAPL,CAAH,4SAgBVM,EAAQN,IAAOO,GAAV,qGAKLC,EAAcR,IAAOC,IAAV,sHAMXQ,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAE3BI,EAAmB,SAACC,EAAMC,GACxB,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAQ,GAAWF,QAAQC,OAAO,4CACzDD,QAAQG,WAsHRC,UApHG,WAAO,IACdC,EAAaC,cAAbD,UACDE,EAAUC,cAFI,EAGcC,oBAAS,GAHvB,mBAGZC,EAHY,KAGFC,EAHE,KAIZC,EAAMC,cAAND,EAoBR,OACI,eAAChC,EAAD,WAEI,cAACG,EAAD,CAAM+B,QAPC,WACXC,QAAQC,IAAIN,GACZC,GAAaD,IAKT,SACI,qBAAKO,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,yBAInBT,EAEI,eAAC1B,EAAD,WACI,eAACC,EAAD,CAAYmC,GAAG,IAAf,UACI,qBAAKH,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,kBAEnB,+BAAOP,EAAE,qBAEb,eAAC3B,EAAD,CAAYmC,GAAG,WAAf,UACI,qBAAKH,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,oBAEnB,+BAAOP,EAAE,qBAEb,eAAC3B,EAAD,CAAYmC,GAAG,SAAf,UACI,qBAAKH,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,oBAEnB,+BAAOP,EAAE,qBAEb,eAAC3B,EAAD,CAAYmC,GAAG,SAAf,UACI,qBAAKH,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,oBAEnB,+BAAOP,EAAE,qBAEb,eAAC3B,EAAD,CAAYmC,GAAG,YAAf,UACI,qBAAKH,UAAU,OAAOC,cAAY,OAAlC,SACI,qBAAKC,UAAU,mBAEnB,+BAAOP,EAAE,wBAIjB,KAGR,cAACzB,EAAD,UAAQyB,EAAE,sDACV,eAACvB,EAAD,WACKuB,EAAE,kCADP,IACiB,cAAC,IAAD,CAASQ,GAAG,YAAZ,SAAyBR,EAAE,uCAE5C,eAAC,IAAD,2BACItB,GADJ,IAEI+B,KAAK,QACLC,SAxEK,SAAAC,GACbR,QAAQC,IAAI,WAAYO,GACxBlB,EAAUmB,YAAYD,EAAOE,UAC7BpB,EAAUqB,YAAYH,EAAOI,UAC7BtB,EAAUuB,QACLC,MAAK,WACFd,QAAQC,IAAI,2DACZT,EAAQuB,KAAK,QACdC,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAI,oEA2DhB,UAKI,cAAC,IAAKiB,KAAN,CACIC,MAAOtB,EAAE,sBACTS,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kCAAU,CAACC,UAAU1C,IAH5D,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKqC,KAAN,CACIC,MAAOtB,EAAE,gBACTS,KAAK,WACLc,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,4BAC3B,CACIE,IAAK,EACLF,QAAQ,mCAEZ,CACIG,IAAK,GACLH,QAAQ,qCAXpB,SAgBI,cAAC,IAAMI,SAAP,MAGJ,cAAC,IAAKR,KAAN,2BAAevC,GAAf,IAA2BuB,UAAU,SAArC,SACI,cAAC,IAAD,CAAQyB,KAAK,UAAUC,SAAS,SAAhC,SACK/B,EAAE","file":"static/js/9.430c1474.chunk.js","sourcesContent":["import  React, { useState } from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport  styled  from 'styled-components';\r\nimport { useStores } from './../stores/index';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"../assets/Login.css\"\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nconst Wraper = styled.div`\r\n\r\n    width:350px;\r\n    box-shadow: 2px 2px 4px 0 rgba(0,0,0,.2);\r\n    border-radius:4px;\r\n    padding:20px;\r\n    margin:30px auto;\r\n    background-color:#fff;\r\n    font-family: Roboto;\r\n    font-size: 12px;\r\n\r\n`\r\nconst Side = styled.div`\r\n// border:1px solid red;\r\nposition: fixed;\r\nleft:0;\r\ntop:0;\r\n// background:#fff;\r\nwidth:25px;\r\nheight:25px;\r\nmargin:10px;\r\n`\r\nconst Sidebar = styled.div`\r\nposition: fixed;\r\nmargin:10px;\r\nleft:0;\r\ntop:35px;\r\nwidth:180px;\r\nlist-style:none;\r\nbackground:#fff;\r\nborder-radius:3px;\r\npadding:0;\r\n.icon {\r\n  width:15px;\r\n  height: 15px;\r\n  vertical-align: -0.15em;\r\n  fill: currentColor;\r\n  overflow: hidden;\r\n}\r\n`\r\nconst StyledLink = styled(NavLink)`\r\n    font-size:15px;\r\n    // border:1px solid red;\r\n    display:block;\r\n    padding:10px;\r\n    color:#333;\r\n    span{\r\n            \r\n            margin-left:5px;\r\n    }\r\n    &:hover{\r\n        background:#c4c4c4;\r\n        border-radius:3px;\r\n            color:#fff;\r\n    }\r\n`\r\nconst Title = styled.h1`\r\n// border:1px solid red;\r\n    text-align:center;\r\n   margin:5px 0 0 0 ;\r\n`\r\nconst NowRegister = styled.div`\r\n    text-align:center;\r\n    margin:15px;\r\n    font-size: 14px;\r\n// border:1px solid red;\r\n`\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 18 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 6, span: 18 },\r\n};\r\nconst validateUsername = (rule, value) => {\r\n        if (/\\W/.test(value)) return Promise.reject('只能时字母数字下划线')\r\n        if (value.length < 4 || value.length >10) return Promise.reject('长度为4~10个字符')\r\n        return Promise.resolve()\r\n    }\r\nconst Compenent = () => {\r\n    const {AuthStore} = useStores()\r\n    const history = useHistory()\r\n    const [ showSide, setShowSide ] = useState(false)\r\n    const { t } = useTranslation()\r\n    \r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.username)\r\n        AuthStore.setPassword(values.password)\r\n        AuthStore.login()\r\n            .then(() => {\r\n                console.log('登录成功,跳转到首页');\r\n                history.push('/')\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                console.log('登录失败，什么也不做');\r\n            })\r\n    }\r\n\r\n    const toggle = () => {\r\n        console.log(showSide);\r\n        setShowSide(!showSide)\r\n    }\r\n    return (\r\n        <Wraper>\r\n\r\n            <Side onClick={toggle}>\r\n                <svg className=\"icon\" aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-cebianlan2\"></use>\r\n                </svg>\r\n            </Side>\r\n            {\r\n                showSide\r\n                    ?\r\n                    <Sidebar >\r\n                        <StyledLink to=\"/\">\r\n                            <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-index\"></use>\r\n                            </svg>\r\n                            <span>{t('首页')}</span>\r\n                        </StyledLink>\r\n                        <StyledLink to=\"/history\">\r\n                            <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-upload2\"></use>\r\n                            </svg>\r\n                            <span>{t('历史')}</span>\r\n                        </StyledLink>\r\n                        <StyledLink to=\"/about\">\r\n                            <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-guanyu4\"></use>\r\n                            </svg>\r\n                            <span>{t('关于')}</span>\r\n                        </StyledLink>\r\n                        <StyledLink to=\"/login\">\r\n                            <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-denglu2\"></use>\r\n                            </svg>\r\n                            <span>{t('登录')}</span>\r\n                        </StyledLink>\r\n                        <StyledLink to=\"/register\">\r\n                            <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-zhuce1\"></use>\r\n                            </svg>\r\n                            <span>{t('注册')}</span>\r\n                        </StyledLink>\r\n                    </Sidebar>\r\n                    :\r\n                    null\r\n            }\r\n            \r\n            <Title>{t('使用你的账户登录')}</Title>\r\n            <NowRegister>\r\n                {t('没有账号？')} <NavLink to=\"/register\">{t('马上注册！')}</NavLink>\r\n            </NowRegister>\r\n            <Form\r\n            {...layout}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item\r\n                    label={t('用户名')}\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: '输入用户名' },{validator:validateUsername}]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label={t('密码')}\r\n                    name=\"password\"\r\n                    rules={[\r\n                        { required: true, message: '输入密码' },\r\n                        {\r\n                            min: 4,\r\n                            message:'最少4个字符'\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message:'最大10个字符'\r\n                        }\r\n\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                     \r\n                <Form.Item {...tailLayout} className=\"button\">\r\n                    <Button type=\"primary\" htmlType=\"submit\" >\r\n                        {t('提交')}\r\n                    </Button> \r\n                </Form.Item>\r\n            </Form>\r\n        </Wraper>\r\n  );\r\n};\r\nexport default Compenent"],"sourceRoot":""}